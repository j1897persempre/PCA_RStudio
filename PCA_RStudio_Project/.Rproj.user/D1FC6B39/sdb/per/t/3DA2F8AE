{
    "contents" : "######################################################################\n                     #PRINCIPAL COMPONENT ANALYSIS\n######################################################################\n\n\n###############PRCOMP###############################\ndata(iris)  #loading the IRIS dataset. contains 150 observations of 5 variables\nhead(iris)  #Column 1, 2, 3 and 4 are the variables required for PCA\n\n#applying PCA using prcomp\niris.pca <- prcomp(iris[,1:4], center = T, scale.= T) #perfomrs PCA. Data is centered and scaled\nplot(iris.pca, type=\"l\", col=\"blue\", lwd=2, main=\"Scree Plot\") #screeplot\nnames(iris.pca) #displays the lists in the object iris.pca\niris.pca$sdev #standard deviations of principal components\niris.pca$rotation #the matrix of variable loadings. The columns contain eigenvectors\n\neig <- iris.pca$sdev^2 #eigenvalues of the principal components\nvariance <- eig*100/sum(eig) #variance explained by each of PCs\ncumvar <- cumsum(variance) #cumulative variance\n\niris.scaled <- scale(iris[,1:4], center = TRUE, scale = TRUE) #centering and scaling the raw data\nnewData1 <- as.data.frame(t(t(iris.pca$rotation)%*%t(iris.scaled))) #new data after PCA\n\n#creating a dataframe with eigenvalues, variance and cumulative variance of PCA\niris.eig <- data.frame(eig = eig, variance = variance,cumvariance = cumvar)\n\n#some plots\npar(mar = c(6,4,4,2)+0.1)\nbarplot(iris.eig[,2],names.arg=1:nrow(iris.eig), main=\"Variances\", \n        xlab=\"Principal Components\",ylab=\"Percentage of Variances\", col=\"steelblue\",\n        space=0.5)\nbarplot(iris.eig[,3],names.arg=1:nrow(iris.eig), main=\"Cumulative Variances\", \n        xlab=\"Principal Components\",ylab=\"Percentage of Cumulative Variances\", \n        col=\"steelblue\", space = 0.5)\nlibrary(corrplot) #library for visualising correlation matrix\ncorrplot(cor(iris[,1:4]), method=\"color\") #correlation matrix of raw data\ncorrplot(cor(newData), method=\"color\") #correlation matrix of the data after PCA\n\n####################END OF PRCOMP########################################\n\n########################### PRINCOMP #####################################\niris.princomp <- princomp(iris[,1:4], cor=T)\nnames(iris.princomp) #displays the list in the object iris.princomp\niris.princomp$sdev #standard deviations of PCs\niris.princomp$loadings\nnewData2 <- as.data.frame(iris.princomp$scores, \n                          colnames(c(\"PC1\",\"PC2\",\"PC3\",\"PC4\"))) #new data after PCA\n\n####################### END OF PRINCOMP ###################################\n\n\n################### PCA from FactoMineR library  ##########################\nlibrary(FactoMineR)\niris.MineR <- PCA(iris[,1:4], scale.unit = T, graph=F)\nnames(iris.MineR)\niris.MineR$eig #eigenvalues, variances and cumulative variances\ndat <- as.data.frame(iris.MineR$ind)\nnewData3 <- dat[,1:4] #new data after PCA\n################### END OF PCA from FactoMineR Library#####################\n\nsummary(newData1) #from prcomp\nsummary(newData2) #from princomp\nsummary(newData3) #from PCA\n\n\n##COMPARING SAS PRINCOMP AND R PRCOMP OR PRINCOMP\nlibrary(\"haven\") #for reading SAS data file into R\ncrime <- read_sas(\"C:/Acads/Datasets/crime.sas7bdat\") #reading SAS data into R\nsummary(crime)\ncrime.pca <- prcomp(crime[,2:8], center = T, scale. = T)\ncrime.princomp <- princomp(crime[,2:8], cor = T)\ncrime.pca$rotation #the principal components from prcomp\ncrime.princomp$loadings #the principal components from princomp\n#the above PCs looks identical to the output from SAS PROCS PRINCOMP.\n#Please refer the SAS documentation of SAS PROCS PRINCOMP v9.2 ",
    "created" : 1447913097928.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3873391621",
    "id" : "3DA2F8AE",
    "lastKnownWriteTime" : 1447922320,
    "path" : "C:/Users/derobert/Desktop/StashDeloitte/pca/PCA_RStudio_Project/R/code_PCA.R",
    "project_path" : "R/code_PCA.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}